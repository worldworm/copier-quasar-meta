stages:
  - test
  - build
  - publish

eslint:
  stage: test
  image: node:18-alpine
  only:
    changes:
      - .gitlab-ci.yml
      - .eslintrc.cjs
      - "**/*.vue"
      - "**/*.ts"
  # tags:
  #   - docker
  script:
    - npm ci
    - npm run lint

{% if use_docker -%}
variables:
  DOCKER_REGISTRY_LOGIN: docker login -u $DOCKER_REGISTRY_USER -p $DOCKER_REGISTRY_PASSWORD $DOCKER_REGISTRY
  DOCKER_REGISTRY_LOGOUT: docker logout $DOCKER_REGISTRY
  DOCKER_IMAGE_NAME: $DOCKER_REGISTRY/$DOCKER_NAMESPACE/$CI_PROJECT_NAME

build-docker:
  stage: build
  image: docker:dind
  # tags:
  #   - docker
  script:
    - $DOCKER_REGISTRY_LOGIN
    - docker build --pull --tag $DOCKER_IMAGE_NAME:$CI_COMMIT_SHA .
    - docker push $DOCKER_IMAGE_NAME:$CI_COMMIT_SHA
    - $DOCKER_REGISTRY_LOGOUT
  except:
    - tags

.docker-publish: &docker-publish
  - $DOCKER_REGISTRY_LOGIN
  - docker pull $DOCKER_IMAGE_NAME:$CI_COMMIT_SHA
  - docker tag $DOCKER_IMAGE_NAME:$CI_COMMIT_SHA $DOCKER_IMAGE_NAME:$DOCKER_TAG
  - docker push $DOCKER_IMAGE_NAME:$DOCKER_TAG
  - $DOCKER_REGISTRY_LOGOUT

publish-docker-edge:
  stage: publish
  image: docker:dind
  variables:
    GIT_STRATEGY: none
    DOCKER_TAG: edge
  # tags:
  #   - docker
  script:
    - *docker-publish
  only:
    - main

publish-docker-release:
  stage: publish
  image: docker:dind
  variables:
    GIT_STRATEGY: none
    DOCKER_TAG: $CI_COMMIT_TAG
  # tags:
  #   - docker
  script:
    - *docker-publish
  only:
    - tags

publish-docker-latest:
  stage: publish
  image: docker:dind
  variables:
    GIT_STRATEGY: none
    DOCKER_TAG: latest
  # tags:
  #   - docker
  script:
    - *docker-publish
  only:
    - tags
{% endif -%}
